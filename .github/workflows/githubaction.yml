name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        default: 'World'
        required: true
        type: string
  push:
    branches: [ main, master ]

jobs:
  ci_cd_workflow:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository to ensure package.json is available
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    # Step 3: Clean npm cache to avoid potential issues
    - name: Clean npm cache
      run: npm cache clean --force

    # Step 4: Update npm to a version compatible with Node 16
    - name: Update npm to compatible version
      run: npm install -g npm@8.19.4
      # Using npm 8.19.4 which is compatible with Node 16

    # Step 5: Install dependencies using npm install with legacy-peer-deps flag
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      # Replaced npm ci with npm install to avoid issues with ansi-regex dependency

    # Step 6: Setup Playwright using the official action
    - uses: actions/setup-node@v3
      with:
        node-version: '16'
    - run: npm ci
    - name: Install Playwright
      run: |
        npm install playwright
        npm install -g @playwright/test
        
    # Step 7: Install Chrome (skip Playwright browser installation)
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        google-chrome --version

    # Step 8: Run MCP tests with report generation
    - name: Run MCP Tests
      run: npm run test:login:report
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        PWDEBUG: 1
      
    # Step 9: Upload test reports as artifacts
    - name: Upload Cucumber HTML Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cucumber-report
        path: |
          cucumber-report.html
          cucumber-report.json
          reports/
        retention-days: 30

    # Step 10: Publish test results to GitHub
    - name: Publish Test Results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          reports/*.xml
          reports/**/*.xml
          
    # Optional: Add success message after tests
    - name: Send success message
      if: success()
      run: echo "CI/CD workflow executed successfully! Hello ${{ inputs.name }}"
      
    # Notify on failure
    - name: Send failure message
      if: failure()
      run: echo "Tests failed! Check the test report for details."
