name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        default: 'World'
        required: true
        type: string
  push:
    branches: [ main, master ]

jobs:
  ci_cd_workflow:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository to ensure package.json is available
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    # Step 3: Clean npm cache to avoid potential issues
    - name: Clean npm cache
      run: npm cache clean --force

    # Step 4: Update npm to a version compatible with Node 16
    - name: Update npm to compatible version
      run: npm install -g npm@8.19.4
      # Using npm 8.19.4 which is compatible with Node 16

    # Step 5: List files for debugging (Optional step to check the directory structure)
    - name: List files for debugging
      run: ls -la

    # Step 6: Install dependencies using npm ci with legacy-peer-deps flag
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      # Replaced npm ci with npm install to avoid issues with ansi-regex dependency

    # Step 7: Install system dependencies required by Playwright
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev libatk1.0-0 libatk-bridge2.0-0 libcups2 libxkbcommon0 libxcomposite1 libxdamage1 libxfixes3 libxrandr2 libgbm1 libasound2 libpango-1.0-0 libpangocairo-1.0-0 libnspr4 libnss3

    # Step 8: Install Playwright Browsers with system dependencies
    - name: Install Playwright Browsers
      run: PLAYWRIGHT_BROWSERS_PATH=0 npx playwright install chromium
      # Installing only Chromium to reduce installation size and time

    # Step 9: Run MCP tests
    - name: Run MCP Tests
      run: npm run test:mcp

    # Optional: Add success message after tests
    - name: Send success message
      run: echo "CI/CD workflow executed successfully! Hello ${{ inputs.name }}"
